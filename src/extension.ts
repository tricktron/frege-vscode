/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

import * as path from 'path';
import { workspace, ExtensionContext } from 'vscode';

import {
	LanguageClient,
	LanguageClientOptions,
	ServerOptions
} from 'vscode-languageclient/node';

let client: LanguageClient;
const APP_NAME = 'frege-lsp-server-1.0.0-alpha';

export function activate(context: ExtensionContext) {
	// generated by the gradle java application plugin's installDist task
	const javaLanguageServerStartScriptPath = context.asAbsolutePath(
		path.join("..", "frege-lsp-server", "build", "distributions", APP_NAME, "bin", 'frege-lsp-server')
	);

	let javaServerOptions: ServerOptions = {
		run: { command: "sh", args: [ javaLanguageServerStartScriptPath ] },
		debug: {
			command: "sh", args: [ javaLanguageServerStartScriptPath ], options: { env: process.env }
		}
	}

	// Options to control the language client
	let clientOptions: LanguageClientOptions = {
		// Register the server for plain text documents
		documentSelector: [{ scheme: 'file', language: 'plaintext' }],
		synchronize: {
			// Notify the server about file changes to '.clientrc files contained in the workspace
			fileEvents: workspace.createFileSystemWatcher('**/.clientrc')
		}
	};

	// Create the language client and start the client.
	client = new LanguageClient(
		'languageServerExample',
		'Language Server Example',
		javaServerOptions,
		clientOptions
	);

	// Start the client. This will also launch the server
	client.start();
}

export function deactivate(): Thenable<void> | undefined {
	if (!client) {
		return undefined;
	}
	return client.stop();
}
